!!!
html(lang='en')
  head
    meta(charset='utf-8')
    title MathLex Sample
    style
      body { text-align: center; }
      #math-display, #math-output { border: 1px solid #000; margin: 5px 0; }
  body
    h1 MathLex Sample
    h2 A Simple Calculator
    input#math-input(type='text', placeholder='Type math here')
    #math-display \[ \]
    input#send-math(type='button', value='Calculate')
    #math-output \[ \]

    script(src='javascripts/mathlex.js')
    script(src='http://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js')
    script(src='https://c328740.ssl.cf1.rackcdn.com/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML')
    script
      $(document).ready(function () {
        // get MathJax output object
        var mjDisplayBox, mjOutBox;
        MathJax.Hub.queue.Push(function () {
          mjDisplayBox = MathJax.Hub.getAllJax('math-display')[0];
          mjOutBox = MathJax.Hub.getAllJax('math-output')[0];
        });
        // "live update" MathJax whenever a key is pressed
        $('#math-input').on('keyup', function (evt) {
          var math = $(this).val();
          $(this).css('color', 'black');
          if (math.length > 0) {
            try {
              var ast = MathLex.parse(math),
                  latex = MathLex.render(ast, 'latex');
              MathJax.Hub.Queue(['Text', mjDisplayBox, latex]);
            } catch (err) {
              $(this).css('color', 'red');
            }
          }
        });
        // send output to sage server
        $('#send-math').on('click', function (evt) {
          var math = $('#math-input').val();
          if (math.length > 0) {
            try {
              var sageCode = MathLex.render(MathLex.parse(math), 'sage');
              $.post('http://aleph.sagemath.org/service?callback=?', {code: 'print latex('+sageCode+')'}, function (data) {
                // HACK: Firefox does not convert data to JSON.
                if (typeof(data) === 'string') { data = $.parseJSON(data); }
                // AJAX success callback
                if (data.success) {
                  MathJax.Hub.Queue(['Text', mjOutBox, data.stdout]);
                } else {
                  MathJax.Hub.Queue(['Text', mjOutBox, '\\text{Sage could not understand that input}']);
                }
              });
            } catch (err) {
              MathJax.Hub.Queue(['Text', mjOutBox, '\\text{Check your syntax and try again}']);
            }
          }
        });
      });
