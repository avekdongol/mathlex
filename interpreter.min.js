function ExpressionBuilder(){}ExpressionBuilder.prototype=new ExpressionBuilderInterface();function buildUnaryExpression(a,b){b.parent=a;a.child=b;return a}function buildBinaryExpression(c,b,a){b.parent=c;a.parent=c;c.left=b;c.right=a;return c}ExpressionBuilder.prototype.newLessRelation=function(b,a){return buildBinaryExpression(new LessRelationExpression(),b,a)};ExpressionBuilder.prototype.newLessEqualRelation=function(b,a){return buildBinaryExpression(new LessEqualRelationExpression(),b,a)};ExpressionBuilder.prototype.newEqualRelation=function(b,a){return buildBinaryExpression(new EqualRelationExpression(),b,a)};ExpressionBuilder.prototype.newNotEqualRelation=function(b,a){return buildBinaryExpression(new NotEqualRelationExpression(),b,a)};ExpressionBuilder.prototype.newGreaterEqualRelation=function(b,a){return buildBinaryExpression(new GreaterEqualRelationExpression(),b,a)};ExpressionBuilder.prototype.newGreaterRelation=function(b,a){return buildBinaryExpression(new GreaterRelationExpression(),b,a)};ExpressionBuilder.prototype.newPlus=function(b,a){return buildBinaryExpression(new PlusExpression(),b,a)};ExpressionBuilder.prototype.newMinus=function(b,a){return buildBinaryExpression(new MinusExpression(),b,a)};ExpressionBuilder.prototype.newTimes=function(b,a){return buildBinaryExpression(new TimesExpression(),b,a)};ExpressionBuilder.prototype.newDivide=function(b,a){return buildBinaryExpression(new DivideExpression(),b,a)};ExpressionBuilder.prototype.newExponent=function(b,a){return buildBinaryExpression(new ExponentExpression(),b,a)};ExpressionBuilder.prototype.newSubscript=function(b,a){return buildBinaryExpression(new SubscriptExpression(),b,a)};ExpressionBuilder.prototype.newParentheses=function(a){return buildUnaryExpression(new ParenthesesExpression(),a)};ExpressionBuilder.prototype.newNegation=function(a){return buildUnaryExpression(new NegationExpression(),a)};ExpressionBuilder.prototype.newPositive=function(a){return buildUnaryExpression(new PositiveExpression(),a)};ExpressionBuilder.prototype.newFactorial=function(a){return buildUnaryExpression(new FactorialExpression(),a)};ExpressionBuilder.prototype.newNumber=function(a){return new NumberExpression(a)};ExpressionBuilder.prototype.newVariable=function(a){return new VariableExpression(a)};ExpressionBuilder.prototype.newConstant=function(a){return new ConstantExpression(a)};ExpressionBuilder.prototype.newNull=function(){return new NullExpression()};function ExpressionBuilderInterface(){}ExpressionBuilderInterface.prototype.newLessRelation=function(b,a){console.log("ExpressionBuilderInterface.newLessRelation() is not implemented")};ExpressionBuilderInterface.prototype.newLessEqualRelation=function(b,a){console.log("ExpressionBuilderInterface.newLessEqualRelation() is not implemented")};ExpressionBuilderInterface.prototype.newEqualRelation=function(b,a){console.log("ExpressionBuilderInterface.newEqualRelation() is not implemented")};ExpressionBuilderInterface.prototype.newNotEqualRelation=function(b,a){console.log("ExpressionBuilderInterface.newNotEqualRelation() is not implemented")};ExpressionBuilderInterface.prototype.newGreaterEqualRelation=function(b,a){console.log("ExpressionBuilderInterface.newGreaterEqualRelation() is not implemented")};ExpressionBuilderInterface.prototype.newGreaterRelation=function(b,a){console.log("ExpressionBuilderInterface.newGreaterRelation() is not implemented")};ExpressionBuilderInterface.prototype.newPlus=function(b,a){console.log("ExpressionBuilderInterface.newPlus() is not implemented")};ExpressionBuilderInterface.prototype.newMinus=function(b,a){console.log("ExpressionBuilderInterface.newMinus() is not implemented")};ExpressionBuilderInterface.prototype.newTimes=function(b,a){console.log("ExpressionBuilderInterface.newTimes() is not implemented")};ExpressionBuilderInterface.prototype.newDivide=function(b,a){console.log("ExpressionBuilderInterface.newDivide() is not implemented")};ExpressionBuilderInterface.prototype.newExponent=function(b,a){console.log("ExpressionBuilderInterface.newExponent() is not implemented")};ExpressionBuilderInterface.prototype.newSubscript=function(b,a){console.log("ExpressionBuilderInterface.newSubscript() is not implemented")};ExpressionBuilderInterface.prototype.newParentheses=function(a){console.log("ExpressionBuilderInterface.newParentheses() is not implemented")};ExpressionBuilderInterface.prototype.newNegation=function(a){console.log("ExpressionBuilderInterface.newNegation() is not implemented")};ExpressionBuilderInterface.prototype.newPositive=function(a){console.log("ExpressionBuilderInterface.newPositive() is not implemented")};ExpressionBuilderInterface.prototype.newFactorial=function(a){console.log("ExpressionBuilderInterface.newFactorial() is not implemented")};ExpressionBuilderInterface.prototype.newNumber=function(a){console.log("ExpressionBuilderInterface.newNumber() is not implemented")};ExpressionBuilderInterface.prototype.newVariable=function(a){console.log("ExpressionBuilderInterface.newVariable() is not implemented")};ExpressionBuilderInterface.prototype.newConstant=function(a){console.log("ExpressionBuilderInterface.newConstant() is not implemented")};ExpressionBuilderInterface.prototype.newNull=function(){console.log("ExpressionBuilderInterface.newNull() is not implemented")};function BinaryExpression(){this.left=null;this.right=null}BinaryExpression.prototype=new Expression();function ConstantExpression(a){this.name=a}ConstantExpression.prototype=new Expression();ConstantExpression.prototype.accept=function(a){a.visitConstant(this)};function DivideExpression(){}DivideExpression.prototype=new BinaryExpression();DivideExpression.prototype.accept=function(a){a.visitDivide(this)};function EqualRelationExpression(){}EqualRelationExpression.prototype=new BinaryExpression();EqualRelationExpression.prototype.accept=function(a){a.visitEqualRelation(this)};function ExponentExpression(){}ExponentExpression.prototype=new BinaryExpression;ExponentExpression.prototype.accept=function(a){a.visitExponent(this)};function Expression(){this.parent=null}Expression.prototype.accept=function(a){console.log("Expression.accept() not implemented")};function FactorialExpression(){}FactorialExpression.prototype=new UnaryExpression();FactorialExpression.prototype.accept=function(a){a.visitFactorial(this)};function GreaterEqualRelationExpression(){}GreaterEqualRelationExpression.prototype=new BinaryExpression();GreaterEqualRelationExpression.prototype.accept=function(a){a.visitGreaterEqualRelation(this)};function GreaterRelationExpression(){}GreaterRelationExpression.prototype=new BinaryExpression();GreaterRelationExpression.prototype.accept=function(a){a.visitGreaterRelation(this)};function LessEqualRelationExpression(){}LessEqualRelationExpression.prototype=new BinaryExpression();LessEqualRelationExpression.prototype.accept=function(a){a.visitLessEqualRelation(this)};function LessRelationExpression(){}LessRelationExpression.prototype=new BinaryExpression();LessRelationExpression.prototype.accept=function(a){a.visitLessRelation(this)};function MinusExpression(){}MinusExpression.prototype=new BinaryExpression();MinusExpression.prototype.accept=function(a){a.visitMinus(this)};function NegationExpression(){}NegationExpression.prototype=new BinaryExpression();NegationExpression.prototype.accept=function(a){a.visitNegation(this)};function NotEqualRelationExpression(){}NotEqualRelationExpression.prototype=new BinaryExpression();NotEqualRelationExpression.prototype.accept=function(a){a.visitNotEqualRelation(this)};function NullExpression(){}NullExpression.prototype=new Expression();NullExpression.prototype.accept=function(a){a.visitNull(this)};function NumberExpression(a){this.value=a}NumberExpression.prototype=new Expression();NumberExpression.prototype.accept=function(a){a.visitNumber(this)};function ParenthesesExpression(){}ParenthesesExpression.prototype=new UnaryExpression();ParenthesesExpression.prototype.accept=function(a){a.visitParentheses(this)};function PlusExpression(){}PlusExpression.prototype=new BinaryExpression();PlusExpression.prototype.accept=function(a){a.visitPlus(this)};function PositiveExpression(){}PositiveExpression.prototype=new UnaryExpression();PositiveExpression.prototype.accept=function(a){a.visitPositive(this)};function SubscriptExpression(){}SubscriptExpression.prototype=new BinaryExpression();SubscriptExpression.prototype.accept=function(a){a.visitSubscript(this)};function TimesExpression(){}TimesExpression.prototype=new BinaryExpression();TimesExpression.prototype.accept=function(a){a.visitTimes(this)};function UnaryExpression(){this.child=null}UnaryExpression.prototype=new Expression();function VariableExpression(a){this.name=a}VariableExpression.prototype=new Expression();VariableExpression.prototype.accept=function(a){a.visitVariable(this)};function Parser(a){this.tokens=null;this.parseTree=null;this.builder=a}Parser.prototype.parse=function(a){this.tokens=a;this.parseTree=this.parseRelation();if(!this.tokens.isDone()){throw"Expected end of token stream"}};Parser.prototype.parseRelation=function(){var b=this.parseSum();if(this.tokens.isDone()){return b}var a=this.tokens.getCurrent();switch(a.type){case Token.Type.LESS_THAN:this.tokens.next();return this.builder.newLessRelation(b,this.parseSum());case Token.Type.LESS_EQUAL:this.tokens.next();return this.builder.newLessEqualRelation(b,this.parseSum());case Token.Type.EQUAL:this.tokens.next();return this.builder.newEqualRelation(b,this.parseSum());case Token.Type.NOT_EQUAL:this.tokens.next();return this.builder.newNotEqualRelation(b,this.parseSum());case Token.Type.GREATER_EQUAL:this.tokens.next();return this.builder.newGreaterEqualRelation(b,this.parseSum());case Token.Type.GREATER_THAN:this.tokens.next();return this.builder.newGreaterRelation(b,this.parseSum());default:return b}};Parser.prototype.parseSum=function(){var b=this.parseTerm();if(this.tokens.isDone()){return b}var a=this.tokens.getCurrent();switch(a.type){case Token.Type.PLUS:this.tokens.next();return this.builder.newPlus(b,this.parseSum());case Token.Type.MINUS:this.tokens.next();return this.builder.newMinus(b,this.parseSum());default:return b}};Parser.prototype.parseTerm=function(){var b=this.parseFraction();if(this.tokens.isDone()){return b}var a=this.tokens.getCurrent();switch(a.type){case Token.Type.TIMES:this.tokens.next();return this.builder.newTimes(b,this.parseTerm());default:return b}};Parser.prototype.parseFraction=function(){var b=this.parseNegation();if(this.tokens.isDone()){return b}var a=this.tokens.getCurrent();switch(a.type){case Token.Type.DIVIDE:this.tokens.next();return this.builder.newDivide(b,this.parseFraction());default:return b}};Parser.prototype.parseNegation=function(){if(this.tokens.isDone()){return this.parseFactor()}var a=this.tokens.getCurrent();switch(a.type){case Token.Type.MINUS:this.tokens.next();return this.builder.newNegation(this.parseFactor());case Token.Type.PLUS:this.tokens.next();return this.builder.newPositive(this.parseFactor());default:return this.parseFactor()}};Parser.prototype.parseFactor=function(){var b=this.parseFactorial();if(this.tokens.isDone()){return b}var a=this.tokens.getCurrent();switch(a.type){case Token.Type.CARET:this.tokens.next();return this.builder.newExponent(b,this.parseNegation());case Token.Type.UNDERSCORE:this.tokens.next();return this.builder.newSubscript(b,this.parseNegation());default:return b}};Parser.prototype.parseFactorial=function(){var b=this.parsePrimary();if(this.tokens.isDone()){return b}var a=this.tokens.getCurrent();switch(a.type){case Token.Type.BANG:this.tokens.next();return this.builder.newFactorial(b);default:return b}};Parser.prototype.parsePrimary=function(){if(this.tokens.isDone()){return this.builder.newNull()}var b=this.tokens.getCurrent();switch(b.type){case Token.Type.LPAREN:this.tokens.next();var a=this.builder.newParentheses(this.parseSum());if(!this.tokens.isDone()&&this.tokens.getCurrent().type==Token.Type.RPAREN){this.tokens.next()}return a;case Token.Type.NUMBER:this.tokens.next();return this.builder.newNumber(parseFloat(b.value));case Token.Type.CONSTANT:this.tokens.next();return this.builder.newConstant(b.value);case Token.Type.VARIABLE:this.tokens.next();return this.builder.newVariable(b.value);default:return this.builder.newNull()}};function Token(a,b){this.type=b?a:Token.typeOf(a);this.value=b?b:a}Token.Type={UNKNOWN:0,PLUS:1,MINUS:2,TIMES:3,DIVIDE:4,CARET:5,UNDERSCORE:6,LPAREN:7,RPAREN:8,BANG:9,DOT:10,CROSS:11,COMPOSITION:12,VECTORIZE:13,GREATER_EQUAL:14,GREATER_THAN:15,EQUAL:16,NOT_EQUAL:17,LESS_THAN:18,LESS_EQUAL:19,NUMBER:20,CONSTANT:21,VARIABLE:22,};Token.typeMap={"+":Token.Type.PLUS,"-":Token.Type.MINUS,"*":Token.Type.TIMES,"/":Token.Type.DIVIDE,"^":Token.Type.CARET,_:Token.Type.UNDERSCORE,"(":Token.Type.LPAREN,")":Token.Type.RPAREN,"!":Token.Type.BANG,"&.":Token.Type.DOT,"&x":Token.Type.CROSS,"&o":Token.Type.COMPOSITION,"&v":Token.Type.VECTORIZE,">=":Token.Type.GREATER_EQUAL,">":Token.Type.GREATER_THAN,"=":Token.Type.EQUAL,"!=":Token.Type.NOT_EQUAL,"<>":Token.Type.NOT_EQUAL,"<":Token.Type.LESS_THAN,"<=":Token.Type.LESS_EQUAL};Token.typeOf=function(a){if(undefined!==Token.typeMap[a]){return Token.typeMap[a]}else{return Token.Type.UNKNOWN}};Token.getMultiChars=function(){var b={};for(var a in this.typeMap){if(a.length>1){b[a]=this.typeMap[a]}}return b};function TokenIterator(b){var a=0;this.first=function(){a=0};this.next=function(){a++};this.prev=function(){a--};this.getCurrent=function(){return b[a]};this.isDone=function(){return(a>=b.length)}}function Tokenizer(){this.input=this.tokens=this.currPos=this.tokenized=null;this.reset()}Tokenizer.prototype.getIterator=function(){if(!this.tokenized){throw"Nothing has been tokenized!"}return new TokenIterator(this.tokens)};Tokenizer.prototype.reset=function(){this.input="";this.currPos=0;this.tokens=[];this.tokenized=false};Tokenizer.prototype.tokenize=function(a){this.reset();this.input=a;while(this.currPos<this.input.length){var b=this.input[this.currPos];if(b.match(/[\*\/\+\-\^\_\(\)\&\!\=\<\>]/)){this.tokenizeOperator()}else{if(b.match(/[\d\.]/)){this.tokenizeNumber()}else{this.tokenizeSymbol()}}}this.tokenized=true};Tokenizer.prototype.tokenizeOperator=function(){var c=1,e=Token.getMultiChars(),d,a;while(e.length>0){c++;if(this.currPos+c>=this.input.length){break}d=this.input.substring(this.currPos,this.currPos+c);a=[];for(var b in e){if(b.substring(0,d.length)===d){a.push(b)}}e=a}if(c==1){c++}this.tokens.push(new Token(this.input.substring(this.currPos,this.currPos+c-1)));this.currPos+=c-1};Tokenizer.prototype.tokenizeNumber=function(){var a=this.currPos;while(this.currPos<this.input.length&&this.input[this.currPos].match(/[\d\.]/)){this.currPos++}this.tokens.push(new Token(Token.Type.NUMBER,this.input.substring(a,this.currPos)))};Tokenizer.prototype.tokenizeSymbol=function(){var a=Token.Type.VARIABLE,b;if(this.input[this.currPos]=="#"){a=Token.Type.CONSTANT;this.currPos++}if(this.input[this.currPos].match(/[a-zA-Z]/)){var c=this.currPos;while(this.currPos<this.input.length&&this.input[this.currPos].match(/[a-zA-Z\d]/)){this.currPos++}b=this.input.substring(c,this.currPos)}else{a=Token.Type.UNKNOWN;b=this.input[this.currPos];this.currPos++}this.tokens.push(new Token(a,b))};function ExpressionVisitor(){}ExpressionVisitor.prototype.visitLessRelation=function(a){console.log("visitLessRelation not implemented")};ExpressionVisitor.prototype.visitLessEqualRelation=function(a){console.log("visitLessEqualRelation not implemented")};ExpressionVisitor.prototype.visitEqualRelation=function(a){console.log("visitEqualRelation not implemented")};ExpressionVisitor.prototype.visitNotEqualRelation=function(a){console.log("visitNotEqualRelation not implemented")};ExpressionVisitor.prototype.visitGreaterEqualRelation=function(a){console.log("visitGreaterEqualRelation not implemented")};ExpressionVisitor.prototype.visitGreaterRelation=function(a){console.log("visitGreaterRelation not implemented")};ExpressionVisitor.prototype.visitPlus=function(a){console.log("visitPlus not implemented")};ExpressionVisitor.prototype.visitMinus=function(a){console.log("visitMinus not implemented")};ExpressionVisitor.prototype.visitTimes=function(a){console.log("visitTimes not implemented")};ExpressionVisitor.prototype.visitDivide=function(a){console.log("visitDivide not implemented")};ExpressionVisitor.prototype.visitExponent=function(a){console.log("visitExponent not implemented")};ExpressionVisitor.prototype.visitSubscript=function(a){console.log("visitSubscript not implemented")};ExpressionVisitor.prototype.visitParentheses=function(a){console.log("visitParentheses not implemented")};ExpressionVisitor.prototype.visitNegation=function(a){console.log("visitNegation not implemented")};ExpressionVisitor.prototype.visitPositive=function(a){console.log("visitPositive not implemented")};ExpressionVisitor.prototype.visitFactorial=function(a){console.log("visitFactorial not implemented")};ExpressionVisitor.prototype.visitNumber=function(a){console.log("visitNumber not implemented")};ExpressionVisitor.prototype.visitVariable=function(a){console.log("visitVariable not implemented")};ExpressionVisitor.prototype.visitConstant=function(a){console.log("visitConstant not implemented")};ExpressionVisitor.prototype.visitNull=function(a){console.log("visitNull not implemented")};function LatexTranslator(){this.latex="";this.specialVarNames={alpha:"\\alpha",beta:"\\beta",gamma:"\\gamma",Gamma:"\\Gamma",delta:"\\delta",Delta:"\\Delta",epsilon:"\\varepsilon",zeta:"\\zeta",eta:"\\eta",theta:"\\theta",Theta:"\\Theta",kappa:"\\kappa",lambda:"\\lambda",Lambda:"\\Lambda",mu:"\\mu",nu:"\\nu",xi:"\\xi",Xi:"\\Xi",omicron:"o",pi:"\\pi",Pi:"\\Pi",rho:"\\rho",sigma:"\\sigma",Sigma:"\\Sigma",tau:"\\tau",upsilon:"\\upsilon",Upsilon:"\\Upsilon",phi:"\\varphi",Phi:"\\Phi",chi:"\\chi",psi:"\\psi",Psi:"\\Psi",omega:"\\omega",Omega:"\\Omega"};this.constants={pi:"\\pi",p:"\\pi",i:"i",e:"\\mathrm{e}",vi:"\\hat\\imath",vj:"\\hat\\jmath",vk:"\\hat{k}",v0:"\\vec{0}",one:"\\mathbf{1}",zero:"\\mathbf{0}",infinity:"\\infty","null":"\\emptyset",gamma:"\\gamma",N:"\\mathbb{N}",Z:"\\mathbb{Z}",Q:"\\mathbb{Q}",R:"\\mathbb{R}",C:"\\mathbb{C}",}}LatexTranslator.prototype=new ExpressionVisitor();LatexTranslator.prototype.binaryInfix=function(a,b){a.left.accept(this);this.latex+=b;a.right.accept(this)};LatexTranslator.prototype.visitLessRelation=function(a){this.binaryInfix(a,"<")};LatexTranslator.prototype.visitLessEqualRelation=function(a){this.binaryInfix(a,"{\\le}")};LatexTranslator.prototype.visitEqualRelation=function(a){this.binaryInfix(a,"=")};LatexTranslator.prototype.visitNotEqualRelation=function(a){this.binaryInfix(a,"{\\neq}")};LatexTranslator.prototype.visitGreaterEqualRelation=function(a){this.binaryInfix(a,"{\\ge}")};LatexTranslator.prototype.visitGreaterRelation=function(a){this.binaryInfix(a,">")};LatexTranslator.prototype.visitPlus=function(a){this.binaryInfix(a,"+")};LatexTranslator.prototype.visitMinus=function(a){this.binaryInfix(a,"-")};LatexTranslator.prototype.visitTimes=function(b){var d="{\\cdot}",a=b.left,c=b.right;while(a instanceof BinaryExpression){a=a.right}while(c instanceof BinaryExpression){c=c.left}if(a instanceof VariableExpression||c instanceof VariableExpression||a instanceof ConstantExpression||c instanceof ConstantExpression||c instanceof ParenthesesExpression){d=""}this.binaryInfix(b,d)};LatexTranslator.prototype.visitDivide=function(a){this.latex+="\\frac{";a.left.accept(this);this.latex+="}{";a.right.accept(this);this.latex+="}"};LatexTranslator.prototype.visitExponent=function(a){a.left.accept(this);this.latex+="^{";if(a.right instanceof ParenthesesExpression){a.right.child.accept(this)}else{a.right.accept(this)}this.latex+="}"};LatexTranslator.prototype.visitSubscript=function(a){a.left.accept(this);this.latex+="_{";a.right.accept(this);this.latex+="}"};LatexTranslator.prototype.visitParentheses=function(a){if(a.parent instanceof DivideExpression){a.child.accept(this)}else{this.latex+="\\left(";a.child.accept(this);this.latex+="\\right)"}};LatexTranslator.prototype.visitNegation=function(a){this.latex+="-";a.child.accept(this)};LatexTranslator.prototype.visitPositive=function(a){this.latex+="+";a.child.accept(this)};LatexTranslator.prototype.visitFactorial=function(a){a.child.accept(this);this.latex+="!"};LatexTranslator.prototype.visitNumber=function(a){this.latex+=a.value+""};LatexTranslator.prototype.visitVariable=function(a){if(undefined!==this.specialVarNames[a.name]){this.latex+="{"+this.specialVarNames[a.name]+"}"}else{this.latex+=a.name}};LatexTranslator.prototype.visitConstant=function(a){if(undefined!==this.constants[a.name]){this.latex+="{"+this.constants[a.name]+"}"}else{this.latex+="\\#"+a.name}};LatexTranslator.prototype.visitNull=function(a){this.latex+="{}"};